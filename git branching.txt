        -------------------------------FAST FORWARD MERGE-------------------------------
якщо у поточній гілці до якої ми додаєм ще одну, наша нова гілка починається з останнього коміту поточної гілки, то використовуємо цей метод.
HEAD поточної гілки стане на місце HEAD гілки яку ми приєднуємо

git checkout -b NAME - створити нову гілку і відразу перейти у неї, гілка створюється там, де є останній коміт поточної гілки(тобто, якщо це коміт номер 3, то від нього піде нова гілка)
git checkout NAME - перейти у гілку
git merge NAME - з'єднати поточний HEAD комміт гілки у якій ми зараз з HEAD коммітом NAME гілки, тобто ми задаємо одному і тому ж коміту два HEAD
	--ff - флаг з'єднання fast forward


        -----------------------------NON FAST FORWARD MERGE------------------------------
якщо поточна гілка до якої ми додаємо нову, має відокремлення гілки наприклад на 3 коміті, а в нас в поточній гілці вже 5 комітів, то використовуємо цей метод.
git merge --no-ff --no-edit NAME - злиття двох гілок без втрат мейна, без проблем і тд.

git config merge.ff false - забороняє FAST FORWARD метод

	-------------------------РОЗ'ЄДНАННЯ ГІЛОК-----------------
git revert --hard ORIG_HEAD - повертає наше останнє з'єднання до останнього роз'єднаного стану